
* ethereum
** start
http://8btc.com/thread-25411-1-1.html chinese start
http://ethfans.org/posts/ethereum-whitepaper white paper in chinese
http://ethfans.org/posts/yi-tai-fang-de-jin-hua project list

** install
*** share host folder in ubuntu
http://blog.csdn.net/zz962/article/details/7706755
http://bbs.csdn.net/topics/350258010
and should overwrite files in /mnt/hgfs !!!! when install vmtools
*** python virtualenv # not use yet
http://www.cnblogs.com/tk091/p/3700013.html
sudo pip install virtualenv
/code# virtualenv test_env --no-site-packages          # create env # for not use public packets
/code/test_env# source ./bin/activate                  # enter env
/code/test_env# deactivate                             # leave env
*** install pyethereum
https://github.com/ethereum/pyethereum/wiki/Developer-Notes
sudo apt-get install python-dev
sudo apt-get install libssl-dev
git clone https://github.com/ethereum/pyethereum/
cd pyethereum
sudo pip install -r requirements.txt
sudo python setup.py install
*** install testrpc
https://github.com/ConsenSys/eth-testrpc
sudo pip install eth-testrpc
testrpc                                                # run
*** prepare solidity
https://ethereum.github.io/solidity/                   # documents
https://github.com/ethereum/webthree-umbrella/wiki     # bulid step
sudo apt-add-repository ppa:george-edison55/cmake-3.x
sudo apt-get -y update
sudo apt-get -y install language-pack-en-base
sudo dpkg-reconfigure locales
sudo apt-get -y install software-properties-common
wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
sudo add-apt-repository "deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.7 main"
sudo add-apt-repository -y ppa:ethereum/ethereum-qt
sudo add-apt-repository -y ppa:ethereum/ethereum
sudo add-apt-repository -y ppa:ethereum/ethereum-dev
sudo apt-get -y update
sudo apt-get -y upgrade
sudo apt-get -y install build-essential git cmake libboost-all-dev libgmp-dev libleveldb-dev libminiupnpc-dev 
  libreadline-dev libncurses5-dev libcurl4-openssl-dev libcryptopp-dev libjson-rpc-cpp-dev libmicrohttpd-dev 
  libjsoncpp-dev libargtable2-dev llvm-3.7-dev libedit-dev mesa-common-dev ocl-icd-libopencl1 opencl-headers 
  libgoogle-perftools-dev qtbase5-dev qt5-default qtdeclarative5-dev libqt5webkit5-dev libqt5webengine5-dev 
  ocl-icd-dev libv8-dev libz-dev
*** install solidity
git clone --recursive https://github.com/ethereum/webthree-umbrella
cd webthree-umbrella
mkdir build
cd build
cmake ..
make -j 2
*** install mix
sudo apt-get install mix
*** install nodejs
https://nodejs.org/en/download/ download source
./configure
make
sudo make install
*** install truffle
sudo apt-get install npm
sudo npm install -g npm
sudo npm install -g any-missing  ( I missing : ansi-regex  balanced-match  graceful-fs  lru-cache  number-is-nan  sigmund  wrappy)
sudo npm install -g truffle
truffle list                                           # verity

*** first test
mkdir slabhra
cd slabhra
truffle init
git init
(in console2) testrpc
truffle compile
truffle deploy                                         # compile and deploy
truffle build
truffle test
*** configure
config/app.json                                        # default config
....../config.json                                     # user costom

** following C++ develop
https://github.com/ethereum/webthree-umbrella/wiki list
https://github.com/ethereum/wiki/wiki list
https://github.com/ethereum/wiki/wiki/Glossary Glossary http://8btc.com/thread-13874-1-4.html chinese
https://gavofyork.gitbooks.io/turboethereum/content/mix.html mix doc
https://github.com/ethereum/webthree-umbrella/releases release
*** TODO https://github.com/ethereum/wiki/wiki/Ethereum-Development-Tutorial

http://forum.ethereum.org/ forum
http://8btc.com/forum-72-1.html http://www.bbs.ethfans.org/ chinese forum
http://8btc.com/thread-21149-1-3.html frontier setup
http://8btc.com/thread-22402-1-1.html private chain
https://github.com/ethereum/webthree-umbrella/wiki/Local-Test-Net local test net

*** console
eth                                                    # start blockchain
eth console                                            # start console
eth console --testnet
  ~/.web3/keys                                         # key stored
> web3.admin.setVerbosity(0)                           # set display level, 0 for silence
> web3.eth.blockNumber                                 # show blockNumber synced
> web3.fromWei(web3.eth.getBalance("de0b295669a9fd93d5f28d9ec85e40f4cb697bae"), 'grand')
> web3.admin.exit()                                    # exit
*** net/admin
> web3.net
> web3.net.peerCount
> web3.net.listening
> web3.admin.net
> web3.admin.net.start()
> web3.admin.net.stop()
> web3.admin.net.peers()
> web3.admin.net.nodeInfo()                            # self node info
> web3.admin.net.connect("5.1.83.226:30303")     
> web3.admin.eth.setMining(true)                       # start mining
> web3.admin.exit()
*** mix
https://gavofyork.gitbooks.io/turboethereum/content/index.html graph interface
*** start eth
./eth -j --json-rpc-port 8545                          # default is 8545

*** TODO web3.js
https://github.com/ethereum/wiki/wiki/JavaScript-API

** TODO solidity learn
https://ethereum.github.io/solidity//docs/simple-smart-contract/ 

* second time, from Apr. 20 '16
!!! http://ethfans.org/posts/r3-corda-announcement a different blockchain

** 关于概念
ethereum : 项目名称，分为四个阶段。
https://blog.ethereum.org/2015/03/03/ethereum-launch-process/
Frontier, Homestead, Metropolis，Serenity
Frontier ：完成类比特币网络，实现挖矿，Ether交易，并可提交执行合约。没有友好界面，是为开发者准备的。
Homestead：
Metropolis：完成友好界面，完成DApp store。
Serenity：使用PoS取代PoW

C++ 路线图
https://blog.ethereum.org/2016/02/12/ethereum-dev-update-c-roadmap/
Solidity ：一种合约定义语言
Mix  ： 合约语言开发调试集成环境


good : history of ethereum
https://blog.ethereum.org/2016/02/09/cut-and-try-building-a-dream/
privacy
https://blog.ethereum.org/2016/01/15/privacy-on-the-blockchain/
scalability
https://blog.ethereum.org/2015/04/05/blockchain-scalability-chain-fibers-redux/

** install cpp-ethereum
now it is more easy than frontier
http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/installing-binaries/linux-ubuntu-ppa.html
sudo add-apt-repository ppa:ethereum/ethereum-qt
sudo add-apt-repository ppa:ethereum/ethereum
sudo apt-get update
sudo apt-get install cpp-ethereum

** install geth
https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum
bash <(curl -L https://install-geth.ethereum.org)  

** install private chain
http://adeduke.com/2015/08/how-to-create-a-private-ethereum-chain/
https://github.com/ethereum/go-ethereum/wiki/Setting-up-private-network-or-local-cluster

*** create genesis file
{
	"nonce": "0xdeadbeefdeadbeef",
	"timestamp": "0x0",
	"parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
	"extraData": "0x0",
	"gasLimit": "0x8000000",
	"difficulty": "0x400",
	"mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
	"coinbase": "0x3333333333333333333333333333333333333333",
	"alloc": {
	}
}

*** init chain in every computer you need
$ geth  --datadir="~/chain" init ~/chain/genesis.json console 2

*** begin chain
$ geth  --datadir="~/chain" --verbosity 6 --ipcdisable --port 30303 --rpcport 8545 --networkid 6723 --nodiscover console 2
  verbosity 6 is important, for display more debug info.
  every node in chain, MUST have SAME networkid

*** add accounts
> personal.newAccount("mypassword");
  here "mypassword" is VERY IMPORTANT, you will lost your account without this password.

*** add account balance in genesis (options)
	"alloc": {
		"0xf000a11d4ef5c9102602dac2e3e8847721ed0a00": {"balance": "10000000000000000000"},
		"0xb330810b4ed4873ce5ddbc1f8cd293dcaf323986": {"balance": "20000000000000000000"},
		"0xc4cd889d7eb29b62fa2a9c1fcbc74c9072fd68a7": {"balance": "30000000000000000000"},
		"0x09f5227665006c443eeb021bdc6160847a0ee875": {"balance": "40000000000000000000"},
		"0x12e451bab397faa7bb06765dd7246a350db78346": {"balance": "50000000000000000000"},
		"0x0de186c08d271983d9fec28a3671046453ab3b49": {"balance": "60000000000000000000"},
		"0x5c55f5f940a0d58f7530e41f9aea8b5c8fe9f39f": {"balance": "70000000000000000000"},
		"0x953cf8374d3e24fec454e9a33948448e07637831": {"balance": "80000000000000000000"},
		"0x71c4e98a934f47ec33d639f91bad0a6bf8f930d8": {"balance": "90000000000000000000"},
		"0x5c1229c1d7740b042d57bdc1ef803e740a9b3cd5": {"balance": "100000000000000000000"}
	}
  if you changed genesis.json, every node MUST reinit, every node in chain, MUST have SAME genesis file

*** verity account balance
> primary = eth.accounts[0];
> balance = web3.fromWei(eth.getBalance(primary), "ether");
  if you change balance in genesis, here is the result, otherwise, return 0

*** get enode in one node
> admin.nodeInfo.enode
  result like this
  "enode://5a58b99bc3149ad8b7b8d3ba7774a57dff083e5a019bd721cbe29f9800368195bc80dae63ef539209ec97d1e234d0ecaa21e9c9dc6eab42a596f03a515853f13@[::]:30303"

*** add peer in all other node
> admin.addPeer("enode://5a58b99bc3149ad8b7b8d3ba7774a57dff083e5a019bd721cbe29f9800368195bc80dae63ef539209ec97d1e234d0ecaa21e9c9dc6eab42a596f03a515853f13@[192.168.1.42]:30303")
  replace [::] with first node address

*** miner
> miner.start();
  you MUST add account for node, before miner, 

> miner.setEtherbase(eth.accounts[2]);
  and can change miner account

> miner.stop();
  only few second after miner, you will have enough ether for test.

*** transaction
> personal.unlockAccount("0x5c9e2e6690afddf5742bf77a91311680c964d0c2", "mypassword");
  unlock account use password

> eth.sendTransaction({from: '0x5c9e2e6690afddf5742bf77a91311680c964d0c2', to: '0x8f715c1093536f6608403721500adaa5032a026c', value: web3.toWei(1, "ether")});
  transaction
> balance = web3.fromWei(eth.getBalance("0x5c9e2e6690afddf5742bf77a91311680c964d0c2"), "ether");
  verity balance

** install truffle
*** g++
sudo apt-get install g++

*** nodejs
https://nodejs.org/en/download/ download source
./configure
make
sudo make install

*** install truffle
sudo apt-get install npm
sudo npm install -g npm
sudo npm install -g truffle
truffle list                                           # verity

*** test truffle
mkdir contract
cd contract
truffle init

*** first test
mkdir slabhra
cd slabhra
truffle init
git init
(in console2) testrpc
truffle compile
truffle deploy                                         # compile and deploy
truffle build
truffle test

*** configure
config/app.json                                        # default config
....../config.json                                     # user costom


** install mist
https://github.com/ethereum/mist
$ curl https://install.meteor.com/ | sh
$ npm install -g electron-prebuilt

$ git clone https://github.com/ethereum/mist.git
$ cd mist
$ git submodule update --init
$ npm install

** develop step
http://consensys.github.io/developers/articles/101-noob-intro/
http://ethfans.org/posts/101-noob-intro chinese version

** solidity step
https://solidity.readthedocs.org/en/latest/introduction-to-smart-contracts.html
http://ethfans.org/posts/solidity-chapter1-introduciton-to-smart-contracts chinese version

* useful
start : geth  --datadir="~/chain" --verbosity 6 --ipcdisable --port 30303 --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --networkid 6723 --nodiscover console 2
enode :  admin.nodeInfo.enode
  "enode://a6c751f98177988cfee05c59bbf45825d3dc70672c126ef4f85addb9761c0c235c8b7d50c321c7785fe1d61e8f3d5f7d3da782f9cce45118cddabd9def364105@[10.0.48.112]:30303?discport=0"


http://www.wanbizu.com/baike/201602126543.html modity ethereum source for costom


